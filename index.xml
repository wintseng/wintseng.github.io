<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wintseng</title>
    <link>/</link>
    <description>Recent content on wintseng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Wed, 25 Mar 2020 21:54:50 +0800</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>symfony project 安裝於 sqlite3 改為 mysqli </title>
      <link>/posts/2020/03/symfony-project-%E5%AE%89%E8%A3%9D%E6%96%BC-sqlite3-%E6%94%B9%E7%82%BA-mysqli/</link>
      <pubDate>Wed, 25 Mar 2020 21:54:50 +0800</pubDate>
      
      <guid>/posts/2020/03/symfony-project-%E5%AE%89%E8%A3%9D%E6%96%BC-sqlite3-%E6%94%B9%E7%82%BA-mysqli/</guid>
      <description>有時候初始安裝 symfony 時採用 sqlite3, 後來移植等原因需改採 mysql server 時，先改設定檔，然後 php/bin/console doctrine:database:create 在 mysql server 上建立新的資料庫。
刪除 src/Migrations 下的所有先前產生的 migration 檔案，再重新 phpbin/console make:migrate 產生供 mysql 語法的 migrations, 再寫入資料 php bin/console doctrine:migrations:migrate 即可。  </description>
    </item>
    
    <item>
      <title>玩phpBB3,自行編繹SASS</title>
      <link>/posts/2020/03/%E7%8E%A9phpbb3%E8%87%AA%E8%A1%8C%E7%B7%A8%E7%B9%B9sass/</link>
      <pubDate>Wed, 25 Mar 2020 21:48:24 +0800</pubDate>
      
      <guid>/posts/2020/03/%E7%8E%A9phpbb3%E8%87%AA%E8%A1%8C%E7%B7%A8%E7%B9%B9sass/</guid>
      <description>採用 Laravel-mix 簡易地組合編繹 css 和 javascript 用於自行開發 bootstrap 風格時的作法   先初始化
 npm init    加入需要的套件
 npm install laravel-mix --save-dev npm install bootstrap font-awesome jquery popper.js axios startbootstrap-sb-admin-2    自 node_modules/laravel-mix/setup/webpack.mix.js 複製到 phpBB3 根目錄, 並編輯之,如下
 let mix = require(&#39;laravel-mix&#39;); mix.js(&#39;src/js/app.js&#39;, &#39;assets/javascript&#39;) .sass(&#39;src/sass/app.scss&#39;, &#39;assets/css&#39;) .sass(&#39;src/sass/landing-page.scss&#39;, &#39;assets/css&#39;) .styles(&#39;src/css/backend.css&#39;, &#39;assets/css/backend.css&#39;) .copy(&#39;node_modules/startbootstrap-landing-page/img&#39;, &#39;./img&#39;) .setPublicPath(&#39;/&#39;);    package.json 需加入
 &amp;quot;scripts&amp;quot;: { &amp;quot;dev&amp;quot;: &amp;quot;npm run development&amp;quot;, &amp;quot;development&amp;quot;: &amp;quot;NODE_ENV=development node_modules/webpack/bin/webpack.</description>
    </item>
    
    <item>
      <title>玩 phpBB3,加裝 packages</title>
      <link>/posts/2020/03/%E7%8E%A9-phpbb3%E5%8A%A0%E8%A3%9D-packages/</link>
      <pubDate>Wed, 25 Mar 2020 21:46:33 +0800</pubDate>
      
      <guid>/posts/2020/03/%E7%8E%A9-phpbb3%E5%8A%A0%E8%A3%9D-packages/</guid>
      <description>phpBB3 採用 compose 管理 packages, 新安裝妥phpBB3後，可先依據 composer.json 以指令 compose install 安裝原始套件的相依 packages，再來加入自動常用的 package ，它會自動載入(autoload)系統中直接可以呼叫使用。
例如：加入 線上生成 pdf 文件的 tecnickcom/tcpdf 套件
compose require tecnickcom/tcpdf  此後，在程式中可以直接呼叫
$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, &#39;UTF-8&#39;, false);  (詳情可以到 vendor/tecnickcom/ 下去找說明文件和豐富的範例檔。)</description>
    </item>
    
    <item>
      <title>玩 Docker,安裝 phpBB3</title>
      <link>/posts/2020/03/%E7%8E%A9-docker%E5%AE%89%E8%A3%9D-phpbb3/</link>
      <pubDate>Wed, 25 Mar 2020 21:33:19 +0800</pubDate>
      
      <guid>/posts/2020/03/%E7%8E%A9-docker%E5%AE%89%E8%A3%9D-phpbb3/</guid>
      <description>主機：iMac
新建目錄,其下置入 docker 設定檔案，並將下載的 phpBB-3.3.0 解壓其下成 phpBB3 目錄
  docker-compose.yaml 是主要的設定檔
version: &#39;3&#39; services: db: build: context: ./ dockerfile: Dockerfile-mysql volumes: - db_data:/var/lib/mysql networks: - phpbbsite phpmyadmin: depends_on: - db image: phpmyadmin/phpmyadmin restart: always ports: - &#39;8080:80&#39; environment: PMA_HOST: db MYSQL_ROOT_PASSWORD: password networks: - phpbbsite phpbb: depends_on: - db build: context: ./ dockerfile: Dockerfile-php volumes: [&#39;./phpBB3:/var/www/html&#39;, &#39;./php.ini:/usr/local/etc/php/conf.d/php.ini&#39;] environment: DB_HOST: db MYSQL_ROOT_PASSWORD: password ports: - &#39;8000:80&#39; networks: - phpbbsite networks: phpbbsite: volumes: db_data:    Dockerfile-mysql 是 mysql-5.</description>
    </item>
    
    <item>
      <title>Centos 8 安裝 Docker 實錄</title>
      <link>/posts/2020/03/centos-8-%E5%AE%89%E8%A3%9D-docker-%E5%AF%A6%E9%8C%84/</link>
      <pubDate>Wed, 25 Mar 2020 21:29:15 +0800</pubDate>
      
      <guid>/posts/2020/03/centos-8-%E5%AE%89%E8%A3%9D-docker-%E5%AF%A6%E9%8C%84/</guid>
      <description>yum update &amp;amp;&amp;amp; yum upgrade yum install git yum install gcc-c++ make curl -sL https://rpm.nodesource.com/setup_13.x | bash - yum install nodes node -v npm -v yum install php-json php-cli php-zip wget unzip php -r &amp;quot;copy(&#39;https://getcomposer.org/installer&#39;, ‘composer-setup.php&#39;);&amp;quot; php composer-setup.php --install-dir=/usr/local/bin —filename=composer composer —-version yum install yum-utils yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo yum install docker-ce systemctl start docker systemctl enable docker systemctl status docker docker -v curl -L https://github.com/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose </description>
    </item>
    
    <item>
      <title>關於 wintseng</title>
      <link>/pages/about/</link>
      <pubDate>Wed, 25 Mar 2020 19:00:10 +0800</pubDate>
      
      <guid>/pages/about/</guid>
      <description>winteng 是 退休人員  在職時沒有很多時間好好地寫程式。退休後玩得更多一點了。 涉獵由 PHP, javascript, ruby on rails &amp;hellip; 最近的作品是「桃園市口罩地圖」(https://hand.tyc.edu.tw/opendata/mask.html)，原先是不打算佔用政府開放資料的資源、佔用頻寬&amp;hellip; 後來還是忍不住手癢，動手寫了這個網頁。但因為用不起 Google Maps，所以採用 OpenMaps，用了才發現 OpenMaps 超好用的，免費也免 API key。  </description>
    </item>
    
  </channel>
</rss>